// This file was generated by counterfeiter
package fakes

import "sync"

type FakePartialStatsdClient struct {
	GaugeDeltaStub        func(stat string, value int64)
	gaugeDeltaMutex       sync.RWMutex
	gaugeDeltaArgsForCall []struct {
		stat  string
		value int64
	}
	GaugeStub        func(stat string, value int64)
	gaugeMutex       sync.RWMutex
	gaugeArgsForCall []struct {
		stat  string
		value int64
	}
}

func (fake *FakePartialStatsdClient) GaugeDelta(stat string, value int64) error {
	fake.gaugeDeltaMutex.Lock()
	fake.gaugeDeltaArgsForCall = append(fake.gaugeDeltaArgsForCall, struct {
		stat  string
		value int64
	}{stat, value})
	fake.gaugeDeltaMutex.Unlock()
	if fake.GaugeDeltaStub != nil {
		fake.GaugeDeltaStub(stat, value)
	}
	return nil
}

func (fake *FakePartialStatsdClient) GaugeDeltaCallCount() int {
	fake.gaugeDeltaMutex.RLock()
	defer fake.gaugeDeltaMutex.RUnlock()
	return len(fake.gaugeDeltaArgsForCall)
}

func (fake *FakePartialStatsdClient) GaugeDeltaArgsForCall(i int) (string, int64) {
	fake.gaugeDeltaMutex.RLock()
	defer fake.gaugeDeltaMutex.RUnlock()
	return fake.gaugeDeltaArgsForCall[i].stat, fake.gaugeDeltaArgsForCall[i].value
}

func (fake *FakePartialStatsdClient) Gauge(stat string, value int64) error {
	fake.gaugeMutex.Lock()
	fake.gaugeArgsForCall = append(fake.gaugeArgsForCall, struct {
		stat  string
		value int64
	}{stat, value})
	fake.gaugeMutex.Unlock()
	if fake.GaugeStub != nil {
		fake.GaugeStub(stat, value)
	}
	return nil
}

func (fake *FakePartialStatsdClient) GaugeCallCount() int {
	fake.gaugeMutex.RLock()
	defer fake.gaugeMutex.RUnlock()
	return len(fake.gaugeArgsForCall)
}

func (fake *FakePartialStatsdClient) GaugeArgsForCall(i int) (string, int64) {
	fake.gaugeMutex.RLock()
	defer fake.gaugeMutex.RUnlock()
	return fake.gaugeArgsForCall[i].stat, fake.gaugeArgsForCall[i].value
}
